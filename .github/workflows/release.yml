name:  test qt action release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+.[0-9]+

jobs:
  job:
    name: ${{ github.workflow }}
    runs-on: windows-2022
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
      - uses: TheMrMilchmann/setup-msvc-dev@v2
        with:
          arch: x64
       
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.4.2'
          host: 'windows'
          target: 'desktop'
          set-env: 'true'

      - name: Configure project on windows
        run: |
              qmake
              nmake
              
      - name: windeployqt 
        run: |
          cd release
          windeployqt.exe  main.exe  
          
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-qt
          path: ./release
    
     
      - name: 7z
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: ./release
          pathTarget: test_qt.tar

      - name: note
        shell: python
        run: |
          import os;f=open('releasenotes.md',"r");obj={i[0].strip():i[1:] for i in [i.split('-') for i in f.read().split('##')[1:]]};f.close()
          note=[obj[i] for i in obj if i=='${{github.ref_name}}'];note=[note[0] if note else ''][0]
          os.system("echo 'NOTE<<EOF' >> $GITHUB_ENV")
          tmp=[os.system("echo '{}' >> $GITHUB_ENV".format(n.strip())) for n in note ]
          os.system("echo 'EOF' >> $GITHUB_ENV")
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{github.ref_name}}
          name: ${{github.ref_name}}
          body: ${{env.NOTE}}
          prerelease: false
          draft: false
          files: test_qt.tar
